{"ast":null,"code":"var _jsxFileName = \"/Users/nicocamachoa/Downloads/DisApp/disney-movie-ranker/src/Tournament.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport movies from './movies';\nimport MoviePoster from './MoviePoster';\nimport './TournamentStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tournament = () => {\n  _s();\n  const [currentRound, setCurrentRound] = useState([]);\n  const [nextRound, setNextRound] = useState([]);\n  const [matchupIndex, setMatchupIndex] = useState(0);\n  const [winner, setWinner] = useState('');\n  const totalMovies = movies.length;\n  const nextPowerOf2 = Math.pow(2, Math.ceil(Math.log2(totalMovies)));\n  const byes = nextPowerOf2 - totalMovies;\n  useEffect(() => {\n    const shuffledMovies = [...movies].sort(() => 0.5 - Math.random());\n    let initialRound = [];\n    let byesRound = [];\n    for (let i = 0; i < byes; i++) {\n      byesRound.push(shuffledMovies[i]);\n    }\n    for (let i = byes; i < shuffledMovies.length; i += 2) {\n      initialRound.push([shuffledMovies[i], shuffledMovies[i + 1]]);\n    }\n    setCurrentRound(initialRound);\n    setNextRound(byesRound);\n  }, []);\n  const selectMovie = movie => {\n    setNextRound([...nextRound, movie]);\n    if (nextRound.length + 1 >= currentRound.length) {\n      if (nextRound.length + 1 === 1) {\n        setWinner(movie);\n      } else {\n        let newRound = [];\n        for (let i = 0; i < nextRound.length; i += 2) {\n          newRound.push([nextRound[i], nextRound[i + 1]]);\n        }\n        setCurrentRound(newRound);\n        setNextRound([]);\n        setMatchupIndex(0);\n      }\n    } else {\n      setMatchupIndex(matchupIndex + 1);\n    }\n  };\n  const goBack = () => {\n    if (matchupIndex > 0) {\n      setNextRound(nextRound.slice(0, -1));\n      setMatchupIndex(matchupIndex - 1);\n    }\n  };\n  const getRoundName = numMovies => {\n    if (numMovies <= 2) return 'Final';\n    if (numMovies <= 4) return 'Semi Finals';\n    if (numMovies <= 8) return 'Quarter Finals';\n    if (numMovies <= 16) return 'Round of 16';\n    if (numMovies <= 32) return 'Round of 32';\n    if (numMovies <= 64) return 'Round of 64';\n    if (numMovies <= 128) return 'Round of 128';\n    if (numMovies <= 256) return 'Round of 256';\n    if (numMovies <= 512) return 'Round of 512';\n    if (numMovies <= 1024) return 'Round of 1024';\n    return '';\n  };\n  const currentMatchupNumber = matchupIndex + 1;\n  const totalMatchups = currentRound.length + byes;\n  const roundName = getRoundName(currentRound.length * 2 + nextRound.length);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tournament Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), !winner && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Matchup: \", currentMatchupNumber, \" out of \", totalMatchups]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Round: \", roundName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this), winner ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Winner:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MoviePoster, {\n        title: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [currentRound.length > 0 && currentRound[matchupIndex] && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"matchup\",\n        children: currentRound[matchupIndex].map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          onClick: () => selectMovie(movie),\n          children: /*#__PURE__*/_jsxDEV(MoviePoster, {\n            title: movie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 37\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }, this), matchupIndex > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goBack,\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(Tournament, \"XqKkXRXHTFYmnVUm62Yt1Z4p80g=\");\n_c = Tournament;\nexport default Tournament;\nvar _c;\n$RefreshReg$(_c, \"Tournament\");","map":{"version":3,"names":["React","useState","useEffect","movies","MoviePoster","jsxDEV","_jsxDEV","Tournament","_s","currentRound","setCurrentRound","nextRound","setNextRound","matchupIndex","setMatchupIndex","winner","setWinner","totalMovies","length","nextPowerOf2","Math","pow","ceil","log2","byes","shuffledMovies","sort","random","initialRound","byesRound","i","push","selectMovie","movie","newRound","goBack","slice","getRoundName","numMovies","currentMatchupNumber","totalMatchups","roundName","children","fileName","_jsxFileName","lineNumber","columnNumber","title","className","map","index","onClick","_c","$RefreshReg$"],"sources":["/Users/nicocamachoa/Downloads/DisApp/disney-movie-ranker/src/Tournament.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport movies from './movies';\nimport MoviePoster from './MoviePoster';\nimport './TournamentStyles.css';\n\nconst Tournament = () => {\n    const [currentRound, setCurrentRound] = useState([]);\n    const [nextRound, setNextRound] = useState([]);\n    const [matchupIndex, setMatchupIndex] = useState(0);\n    const [winner, setWinner] = useState('');\n\n    const totalMovies = movies.length;\n    const nextPowerOf2 = Math.pow(2, Math.ceil(Math.log2(totalMovies)));\n    const byes = nextPowerOf2 - totalMovies;\n\n    useEffect(() => {\n        const shuffledMovies = [...movies].sort(() => 0.5 - Math.random());\n\n        let initialRound = [];\n        let byesRound = [];\n\n        for (let i = 0; i < byes; i++) {\n            byesRound.push(shuffledMovies[i]);\n        }\n\n        for (let i = byes; i < shuffledMovies.length; i += 2) {\n            initialRound.push([shuffledMovies[i], shuffledMovies[i + 1]]);\n        }\n\n        setCurrentRound(initialRound);\n        setNextRound(byesRound);\n    }, []);\n\n    const selectMovie = (movie) => {\n        setNextRound([...nextRound, movie]);\n\n        if (nextRound.length + 1 >= currentRound.length) {\n            if (nextRound.length + 1 === 1) {\n                setWinner(movie);\n            } else {\n                let newRound = [];\n                for (let i = 0; i < nextRound.length; i += 2) {\n                    newRound.push([nextRound[i], nextRound[i + 1]]);\n                }\n                setCurrentRound(newRound);\n                setNextRound([]);\n                setMatchupIndex(0);\n            }\n        } else {\n            setMatchupIndex(matchupIndex + 1);\n        }\n    };\n\n    const goBack = () => {\n        if (matchupIndex > 0) {\n            setNextRound(nextRound.slice(0, -1));\n            setMatchupIndex(matchupIndex - 1);\n        }\n    };\n\n\n    const getRoundName = (numMovies) => {\n        if (numMovies <= 2) return 'Final';\n        if (numMovies <= 4) return 'Semi Finals';\n        if (numMovies <= 8) return 'Quarter Finals';\n        if (numMovies <= 16) return 'Round of 16';\n        if (numMovies <= 32) return 'Round of 32';\n        if (numMovies <= 64) return 'Round of 64';\n        if (numMovies <= 128) return 'Round of 128';\n        if (numMovies <= 256) return 'Round of 256';\n        if (numMovies <= 512) return 'Round of 512';\n        if (numMovies <= 1024) return 'Round of 1024';\n        return '';\n    };\n\n    const currentMatchupNumber = matchupIndex + 1;\n    const totalMatchups = currentRound.length + byes;\n    const roundName = getRoundName(currentRound.length * 2 + nextRound.length);\n\n    return (\n        <div>\n            <h2>Tournament Mode</h2>\n            {!winner && (\n                <div>\n                    <p>Current Matchup: {currentMatchupNumber} out of {totalMatchups}</p>\n                    <p>Current Round: {roundName}</p>\n                </div>\n            )}\n            {winner ? (\n                <div>\n                    <h3>Winner:</h3>\n                    <MoviePoster title={winner} />\n                </div>\n            ) : (\n                <div>\n                    {currentRound.length > 0 && currentRound[matchupIndex] && (\n                        <div className=\"matchup\">\n                            {currentRound[matchupIndex].map((movie, index) => (\n                                <div key={index} className=\"card\" onClick={() => selectMovie(movie)}>\n                                    <MoviePoster title={movie} />\n                                </div>\n                            ))}\n                        </div>\n                    )}\n                    {matchupIndex > 0 && <button onClick={goBack}>Go Back</button>}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Tournament;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}