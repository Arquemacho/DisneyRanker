{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicoc\\\\DisneyRanker\\\\src\\\\Tournament.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MoviePoster from './MoviePoster';\nimport { useLocation } from 'react-router-dom';\nimport './TournamentStyles.css';\nimport confetti from 'canvas-confetti';\nimport { TwitterShareButton, WhatsappShareButton, TwitterIcon, WhatsappIcon } from 'react-share';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tournament = () => {\n  _s();\n  var _location$state;\n  const [currentRound, setCurrentRound] = useState([]);\n  const [nextRound, setNextRound] = useState([]);\n  const [winner, setWinner] = useState(null);\n  const [matchupIndex, setMatchupIndex] = useState(0);\n  const [totalMatchupsInRound, setTotalMatchupsInRound] = useState(0);\n  const location = useLocation();\n  const moviesFromSelection = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.movies) || [];\n  const [selectionHistory, setSelectionHistory] = useState([]);\n  const [sessionID, setSessionID] = useState('');\n  useEffect(() => {\n    setSessionID(generateUniqueID());\n    const savedState = localStorage.getItem('tournamentState');\n    if (savedState) {\n      const {\n        currentRound,\n        nextRound,\n        winner,\n        matchupIndex,\n        totalMatchupsInRound,\n        selectionHistory\n      } = JSON.parse(savedState);\n      setCurrentRound(currentRound);\n      setNextRound(nextRound);\n      setWinner(winner);\n      setMatchupIndex(matchupIndex);\n      setTotalMatchupsInRound(totalMatchupsInRound);\n      setSelectionHistory(selectionHistory);\n    } else if (moviesFromSelection.length > 0) {\n      initializeTournament(moviesFromSelection);\n    } else {\n      fetchMoviesAndInitialize();\n    }\n  }, [moviesFromSelection]);\n  const fetchMoviesAndInitialize = () => {\n    fetch('http://186.113.234.239:3001/api/movies').then(response => response.json()).then(moviesData => {\n      const movieTitles = moviesData.map(movie => movie.title);\n      initializeTournament(movieTitles);\n    }).catch(error => console.error('Failed to fetch movies:', error));\n  };\n  const initializeTournament = moviesArray => {\n    const shuffledMovies = [...moviesArray].sort(() => 0.5 - Math.random());\n    const initialRound = [];\n    while (shuffledMovies.length) {\n      initialRound.push([shuffledMovies.shift(), shuffledMovies.shift()].filter(Boolean));\n    }\n    setCurrentRound(initialRound);\n    setTotalMatchupsInRound(initialRound.length);\n    setNextRound([]);\n    setWinner(null);\n    setMatchupIndex(0);\n  };\n  function generateUniqueID() {\n    return Math.random().toString(36).substr(2, 9);\n  }\n  const handleKeyDown = event => {\n    const currentMatchup = currentRound[matchupIndex];\n    if (!currentMatchup || currentMatchup.length === 0) return;\n    if (event.key === 'ArrowRight' || event.key === 'ArrowLeft') {\n      const movieIndex = event.key === 'ArrowLeft' ? 0 : 1;\n      if (currentMatchup[movieIndex]) {\n        selectMovie(currentMatchup[movieIndex]);\n      }\n    } else if (event.key === 'a' && currentMatchup.length > 0) {\n      deleteMovie(currentMatchup[0]);\n    } else if (event.key === 's' && currentMatchup.length > 1) {\n      deleteMovie(currentMatchup[1]);\n    }\n  };\n  function selectMovie(selectedMovie) {\n    if (winner) return;\n    let updatedNextRound = [...nextRound, selectedMovie];\n    const loserMovie = currentRound[matchupIndex].find(movie => movie !== selectedMovie);\n    const selection = {\n      sessionID: sessionID,\n      matchup: {\n        winner: selectedMovie,\n        loser: loserMovie\n      },\n      round: calculateTournamentRound(totalMatchupsInRound),\n      timestamp: new Date().toISOString(),\n      deviceInfo: navigator.userAgent\n    };\n    setSelectionHistory(prevHistory => [...prevHistory, selection]);\n    sendDataToBackend(selection);\n    if (matchupIndex === currentRound.length - 1) {\n      if (updatedNextRound.length === 1) {\n        setWinner(updatedNextRound[0]);\n      } else {\n        setCurrentRound(createRound(updatedNextRound));\n        setTotalMatchupsInRound(updatedNextRound.length);\n        setNextRound([]);\n        setMatchupIndex(0);\n      }\n    } else {\n      setNextRound(updatedNextRound);\n      setMatchupIndex(prevIndex => prevIndex + 1);\n    }\n  }\n  async function sendDataToBackend(selection) {\n    try {\n      await fetch('http://186.113.234.239:3001/api/selection', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(selection)\n      });\n    } catch (error) {\n      console.error('Error sending selection data to backend:', error);\n    }\n  }\n  const deleteMovie = async movieTitle => {\n    try {\n      const response = await fetch('http://186.113.234.239:3001/api/delete-movie', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: movieTitle\n        })\n      });\n      if (response.ok) {\n        setCurrentRound(currentRound => currentRound.map(matchup => matchup.filter(movie => movie !== movieTitle)));\n        setNextRound(nextRound => nextRound.filter(movie => movie !== movieTitle));\n      } else {\n        console.error('Failed to delete the movie');\n      }\n    } catch (error) {\n      console.error('Error deleting movie:', error);\n    }\n  };\n  const createRound = winners => {\n    let newRound = [];\n    for (let i = 0; i < winners.length; i += 2) {\n      newRound.push(winners.slice(i, i + 2));\n    }\n    return newRound;\n  };\n  const getRoundName = numMovies => {\n    const names = ['Final', 'Semi Final', 'Cuartos de Final', 'Octavos de Final', 'Ronda de 32', 'Ronda de 64', 'Ronda de 128', 'Ronda de 256', 'Ronda de 512', 'Ronda de 1024'];\n    let index = Math.ceil(Math.log2(numMovies / 2));\n    return names[index] || '';\n  };\n  const triggerConfetti = () => {\n    if (winner) {\n      confetti({\n        particleCount: 2001,\n        spread: 300,\n        origin: {\n          y: 0.4\n        }\n      });\n    }\n  };\n  useEffect(triggerConfetti, [winner]);\n  const calculateTournamentRound = totalMatchups => {\n    return Math.ceil(Math.log2(totalMatchups * 2));\n  };\n  const startNewTournament = () => {\n    fetchMoviesAndInitialize();\n    setSessionID(generateUniqueID());\n    setWinner(null);\n    setSelectionHistory([]);\n    localStorage.removeItem('tournamentState');\n  };\n  if (winner) {\n    const shareUrl = 'http://186.113.234.239:3000/';\n    const title = `Mi película favorita de Disney es ${winner}. ¡Averigua cuál es la tuya!`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"winner-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ganador:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MoviePoster, {\n        title: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: startNewTournament,\n        children: \"Empezar un Nuevo Torneo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"social-share-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(TwitterShareButton, {\n          url: shareUrl,\n          title: title,\n          children: /*#__PURE__*/_jsxDEV(TwitterIcon, {\n            size: 32,\n            round: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(WhatsappShareButton, {\n          url: shareUrl,\n          title: title,\n          children: /*#__PURE__*/_jsxDEV(WhatsappIcon, {\n            size: 32,\n            round: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this);\n  }\n  const roundName = getRoundName(currentRound.length * 2);\n  const totalMatchups = currentRound.length + Math.ceil(nextRound.length / 2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tournament-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tournament-title\",\n      children: \"Torneo de Peliculas Disney\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this), !winner && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-box\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Enfrentamiento \", matchupIndex + 1, \" de \", totalMatchupsInRound]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-box\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: roundName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"matchup\",\n        children: currentRound[matchupIndex] && currentRound[matchupIndex].map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          onClick: () => selectMovie(movie),\n          children: [\" \", /*#__PURE__*/_jsxDEV(MoviePoster, {\n            title: movie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 33\n          }, this)]\n        }, `${movie}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: startNewTournament,\n        children: \"Empezar un Nuevo Torneo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footnote\",\n      children: [\"Creado por \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.instagram.com/nicocamachoaa/\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Nicolas Camacho\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 9\n  }, this);\n};\n_s(Tournament, \"IhxbyE5o2Fz+cufsS1+wbVwHPK0=\", false, function () {\n  return [useLocation];\n});\n_c = Tournament;\nexport default Tournament;\nvar _c;\n$RefreshReg$(_c, \"Tournament\");","map":{"version":3,"names":["React","useState","useEffect","MoviePoster","useLocation","confetti","TwitterShareButton","WhatsappShareButton","TwitterIcon","WhatsappIcon","jsxDEV","_jsxDEV","Tournament","_s","_location$state","currentRound","setCurrentRound","nextRound","setNextRound","winner","setWinner","matchupIndex","setMatchupIndex","totalMatchupsInRound","setTotalMatchupsInRound","location","moviesFromSelection","state","movies","selectionHistory","setSelectionHistory","sessionID","setSessionID","generateUniqueID","savedState","localStorage","getItem","JSON","parse","length","initializeTournament","fetchMoviesAndInitialize","fetch","then","response","json","moviesData","movieTitles","map","movie","title","catch","error","console","moviesArray","shuffledMovies","sort","Math","random","initialRound","push","shift","filter","Boolean","toString","substr","handleKeyDown","event","currentMatchup","key","movieIndex","selectMovie","deleteMovie","selectedMovie","updatedNextRound","loserMovie","find","selection","matchup","loser","round","calculateTournamentRound","timestamp","Date","toISOString","deviceInfo","navigator","userAgent","prevHistory","sendDataToBackend","createRound","prevIndex","method","headers","body","stringify","movieTitle","ok","winners","newRound","i","slice","getRoundName","numMovies","names","index","ceil","log2","triggerConfetti","particleCount","spread","origin","y","totalMatchups","startNewTournament","removeItem","shareUrl","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","url","size","roundName","href","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/nicoc/DisneyRanker/src/Tournament.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MoviePoster from './MoviePoster';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './TournamentStyles.css';\r\nimport confetti from 'canvas-confetti';\r\nimport { TwitterShareButton, WhatsappShareButton, TwitterIcon, WhatsappIcon } from 'react-share';\r\n\r\nconst Tournament = () => {\r\n    const [currentRound, setCurrentRound] = useState([]);\r\n    const [nextRound, setNextRound] = useState([]);\r\n    const [winner, setWinner] = useState(null);\r\n    const [matchupIndex, setMatchupIndex] = useState(0);\r\n    const [totalMatchupsInRound, setTotalMatchupsInRound] = useState(0);\r\n    const location = useLocation();\r\n    const moviesFromSelection = location.state?.movies || [];\r\n    const [selectionHistory, setSelectionHistory] = useState([]);\r\n    const [sessionID, setSessionID] = useState('');\r\n\r\n    useEffect(() => {\r\n        setSessionID(generateUniqueID());\r\n\r\n        const savedState = localStorage.getItem('tournamentState');\r\n        if (savedState) {\r\n            const { currentRound, nextRound, winner, matchupIndex, totalMatchupsInRound, selectionHistory } = JSON.parse(savedState);\r\n            setCurrentRound(currentRound);\r\n            setNextRound(nextRound);\r\n            setWinner(winner);\r\n            setMatchupIndex(matchupIndex);\r\n            setTotalMatchupsInRound(totalMatchupsInRound);\r\n            setSelectionHistory(selectionHistory);\r\n        } else if (moviesFromSelection.length > 0) {\r\n            initializeTournament(moviesFromSelection);\r\n        } else {\r\n            fetchMoviesAndInitialize();\r\n        }\r\n    }, [moviesFromSelection]);\r\n\r\n    const fetchMoviesAndInitialize = () => {\r\n        fetch('http://186.113.234.239:3001/api/movies')\r\n            .then(response => response.json())\r\n            .then(moviesData => {\r\n                const movieTitles = moviesData.map(movie => movie.title);\r\n                initializeTournament(movieTitles);\r\n            })\r\n            .catch(error => console.error('Failed to fetch movies:', error));\r\n    };\r\n\r\n    const initializeTournament = (moviesArray) => {\r\n        const shuffledMovies = [...moviesArray].sort(() => 0.5 - Math.random());\r\n        const initialRound = [];\r\n\r\n        while (shuffledMovies.length) {\r\n            initialRound.push([shuffledMovies.shift(), shuffledMovies.shift()].filter(Boolean));\r\n        }\r\n\r\n        setCurrentRound(initialRound);\r\n        setTotalMatchupsInRound(initialRound.length);\r\n        setNextRound([]);\r\n        setWinner(null);\r\n        setMatchupIndex(0);\r\n    };\r\n\r\n    function generateUniqueID() {\r\n        return Math.random().toString(36).substr(2, 9);\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        const currentMatchup = currentRound[matchupIndex];\r\n        if (!currentMatchup || currentMatchup.length === 0) return;\r\n\r\n        if (event.key === 'ArrowRight' || event.key === 'ArrowLeft') {\r\n            const movieIndex = event.key === 'ArrowLeft' ? 0 : 1;\r\n            if (currentMatchup[movieIndex]) {\r\n                selectMovie(currentMatchup[movieIndex]);\r\n            }\r\n        } else if (event.key === 'a' && currentMatchup.length > 0) {\r\n            deleteMovie(currentMatchup[0]);\r\n        } else if (event.key === 's' && currentMatchup.length > 1) {\r\n            deleteMovie(currentMatchup[1]);\r\n        }\r\n    };\r\n\r\n    function selectMovie(selectedMovie) {\r\n        if (winner) return;\r\n\r\n        let updatedNextRound = [...nextRound, selectedMovie];\r\n        const loserMovie = currentRound[matchupIndex].find(movie => movie !== selectedMovie);\r\n\r\n        const selection = {\r\n            sessionID: sessionID,\r\n            matchup: {\r\n                winner: selectedMovie,\r\n                loser: loserMovie\r\n            },\r\n            round: calculateTournamentRound(totalMatchupsInRound),\r\n            timestamp: new Date().toISOString(),\r\n            deviceInfo: navigator.userAgent\r\n        };\r\n\r\n        setSelectionHistory(prevHistory => [...prevHistory, selection]);\r\n        sendDataToBackend(selection);\r\n\r\n        if (matchupIndex === currentRound.length - 1) {\r\n            if (updatedNextRound.length === 1) {\r\n                setWinner(updatedNextRound[0]);\r\n            } else {\r\n                setCurrentRound(createRound(updatedNextRound));\r\n                setTotalMatchupsInRound(updatedNextRound.length);\r\n                setNextRound([]);\r\n                setMatchupIndex(0);\r\n            }\r\n        } else {\r\n            setNextRound(updatedNextRound);\r\n            setMatchupIndex(prevIndex => prevIndex + 1);\r\n        }\r\n    }\r\n\r\n    async function sendDataToBackend(selection) {\r\n        try {\r\n            await fetch('http://186.113.234.239:3001/api/selection', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(selection)\r\n            });\r\n        } catch (error) {\r\n            console.error('Error sending selection data to backend:', error);\r\n        }\r\n    }\r\n\r\n    const deleteMovie = async (movieTitle) => {\r\n        try {\r\n            const response = await fetch('http://186.113.234.239:3001/api/delete-movie', {\r\n                method: 'DELETE',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ title: movieTitle })\r\n            });\r\n\r\n            if (response.ok) {\r\n                setCurrentRound(currentRound => currentRound.map(matchup => matchup.filter(movie => movie !== movieTitle)));\r\n                setNextRound(nextRound => nextRound.filter(movie => movie !== movieTitle));\r\n            } else {\r\n                console.error('Failed to delete the movie');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting movie:', error);\r\n        }\r\n    };\r\n\r\n    const createRound = (winners) => {\r\n        let newRound = [];\r\n        for (let i = 0; i < winners.length; i += 2) {\r\n            newRound.push(winners.slice(i, i + 2));\r\n        }\r\n        return newRound;\r\n    };\r\n\r\n    const getRoundName = (numMovies) => {\r\n        const names = ['Final', 'Semi Final', 'Cuartos de Final', 'Octavos de Final', 'Ronda de 32', 'Ronda de 64', 'Ronda de 128', 'Ronda de 256', 'Ronda de 512', 'Ronda de 1024'];\r\n        let index = Math.ceil(Math.log2(numMovies / 2));\r\n        return names[index] || '';\r\n    };\r\n\r\n    const triggerConfetti = () => {\r\n        if (winner) {\r\n            confetti({\r\n                particleCount: 2001,\r\n                spread: 300,\r\n                origin: { y: 0.4 }\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(triggerConfetti, [winner]);\r\n    const calculateTournamentRound = (totalMatchups) => {\r\n        return Math.ceil(Math.log2(totalMatchups * 2));\r\n    };\r\n\r\n    const startNewTournament = () => {\r\n        fetchMoviesAndInitialize();\r\n        setSessionID(generateUniqueID());\r\n        setWinner(null);\r\n        setSelectionHistory([]);\r\n        localStorage.removeItem('tournamentState');\r\n    };\r\n        \r\n\r\n    if (winner) {\r\n        const shareUrl = 'http://186.113.234.239:3000/';\r\n        const title = `Mi película favorita de Disney es ${winner}. ¡Averigua cuál es la tuya!`;\r\n    \r\n        return (\r\n            <div className=\"winner-container\">\r\n                <h3>Ganador:</h3>\r\n                <MoviePoster title={winner} />\r\n                <button className=\"button\" onClick={startNewTournament}>Empezar un Nuevo Torneo</button>\r\n    \r\n                <div className=\"social-share-buttons\">\r\n                    <TwitterShareButton url={shareUrl} title={title}>\r\n                        <TwitterIcon size={32} round />\r\n                    </TwitterShareButton>\r\n    \r\n                    <WhatsappShareButton url={shareUrl} title={title}>\r\n                        <WhatsappIcon size={32} round />\r\n                    </WhatsappShareButton>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const roundName = getRoundName(currentRound.length * 2);\r\n    const totalMatchups = currentRound.length + Math.ceil(nextRound.length / 2);\r\n\r\n    return (\r\n        <div className=\"tournament-container\">\r\n            <div className=\"tournament-title\">Torneo de Peliculas Disney</div>\r\n            {!winner && (\r\n                <div>\r\n                    <div className=\"info-container\">\r\n                        <div className=\"info-box\">\r\n                            <p>Enfrentamiento {matchupIndex + 1} de {totalMatchupsInRound}</p>\r\n                        </div>\r\n                        <div className=\"info-box\">\r\n                            <p>{roundName}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"matchup\">\r\n                        {currentRound[matchupIndex] && currentRound[matchupIndex].map((movie, index) => (\r\n                            <div key={`${movie}-${index}`} className=\"card\" onClick={() => selectMovie(movie)}> {/* Change made here */}\r\n                                <MoviePoster title={movie} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <button className=\"button\" onClick={startNewTournament}>Empezar un Nuevo Torneo</button>\r\n                </div>\r\n            )}\r\n            <div className=\"footnote\">\r\n                Creado por <a href=\"https://www.instagram.com/nicocamachoaa/\" target=\"_blank\" rel=\"noopener noreferrer\">Nicolas Camacho</a>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tournament;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}