{"ast":null,"code":"var _jsxFileName = \"/Users/nicocamachoa/Downloads/DisApp/disney-movie-ranker/src/MovieSelectionScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieSelectionScreen = () => {\n  _s();\n  var _location$state;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [selectedMovies, setSelectedMovies] = useState([]);\n  const mode = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.mode) || 'tournament'; // Default to 'tournament'\n\n  useEffect(() => {\n    // Placeholder for logic to fetch movies or set up selection\n  }, []);\n  const handleMovieSelect = movie => {\n    setSelectedMovies(prevMovies => {\n      // Add or remove movie from the selected list\n      if (prevMovies.includes(movie)) {\n        return prevMovies.filter(m => m !== movie);\n      } else {\n        return [...prevMovies, movie];\n      }\n    });\n  };\n  const startTournamentOrRanking = () => {\n    if (mode === 'tournament') {\n      navigate('/tournament', {\n        state: {\n          movies: selectedMovies\n        }\n      });\n    } else if (mode === 'ranking') {\n      navigate('/ranking', {\n        state: {\n          movies: selectedMovies\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleMovieSelect(movie),\n      children: movie.title\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startTournamentOrRanking,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieSelectionScreen, \"eMxPLFFtqXi9sQpiBdYYcpUam3g=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = MovieSelectionScreen;\nexport default MovieSelectionScreen;\nvar _c;\n$RefreshReg$(_c, \"MovieSelectionScreen\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","jsxDEV","_jsxDEV","MovieSelectionScreen","_s","_location$state","navigate","location","selectedMovies","setSelectedMovies","mode","state","handleMovieSelect","movie","prevMovies","includes","filter","m","startTournamentOrRanking","movies","children","map","onClick","title","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nicocamachoa/Downloads/DisApp/disney-movie-ranker/src/MovieSelectionScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nconst MovieSelectionScreen = () => {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const [selectedMovies, setSelectedMovies] = useState([]);\n    const mode = location.state?.mode || 'tournament'; // Default to 'tournament'\n\n    useEffect(() => {\n        // Placeholder for logic to fetch movies or set up selection\n    }, []);\n\n    const handleMovieSelect = (movie) => {\n        setSelectedMovies(prevMovies => {\n            // Add or remove movie from the selected list\n            if (prevMovies.includes(movie)) {\n                return prevMovies.filter(m => m !== movie);\n            } else {\n                return [...prevMovies, movie];\n            }\n        });\n    };\n\n    const startTournamentOrRanking = () => {\n        if (mode === 'tournament') {\n            navigate('/tournament', { state: { movies: selectedMovies } });\n        } else if (mode === 'ranking') {\n            navigate('/ranking', { state: { movies: selectedMovies } });\n        }\n    };\n\n    return (\n        <div>\n            {/* Implement UI for selecting movies */}\n            {/* Example: List of movies with checkboxes or clickable items */}\n            {movies.map(movie => (\n                <div key={movie.id} onClick={() => handleMovieSelect(movie)}>\n                    {/* Display movie info - adjust as needed */}\n                    {movie.title}\n                </div>\n            ))}\n            <button onClick={startTournamentOrRanking}>Start</button>\n        </div>\n    );\n};\n\nexport default MovieSelectionScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,eAAA;EAC/B,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMa,IAAI,GAAG,EAAAL,eAAA,GAAAE,QAAQ,CAACI,KAAK,cAAAN,eAAA,uBAAdA,eAAA,CAAgBK,IAAI,KAAI,YAAY,CAAC,CAAC;;EAEnDZ,SAAS,CAAC,MAAM;IACZ;EAAA,CACH,EAAE,EAAE,CAAC;EAEN,MAAMc,iBAAiB,GAAIC,KAAK,IAAK;IACjCJ,iBAAiB,CAACK,UAAU,IAAI;MAC5B;MACA,IAAIA,UAAU,CAACC,QAAQ,CAACF,KAAK,CAAC,EAAE;QAC5B,OAAOC,UAAU,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKJ,KAAK,CAAC;MAC9C,CAAC,MAAM;QACH,OAAO,CAAC,GAAGC,UAAU,EAAED,KAAK,CAAC;MACjC;IACJ,CAAC,CAAC;EACN,CAAC;EAED,MAAMK,wBAAwB,GAAGA,CAAA,KAAM;IACnC,IAAIR,IAAI,KAAK,YAAY,EAAE;MACvBJ,QAAQ,CAAC,aAAa,EAAE;QAAEK,KAAK,EAAE;UAAEQ,MAAM,EAAEX;QAAe;MAAE,CAAC,CAAC;IAClE,CAAC,MAAM,IAAIE,IAAI,KAAK,SAAS,EAAE;MAC3BJ,QAAQ,CAAC,UAAU,EAAE;QAAEK,KAAK,EAAE;UAAEQ,MAAM,EAAEX;QAAe;MAAE,CAAC,CAAC;IAC/D;EACJ,CAAC;EAED,oBACIN,OAAA;IAAAkB,QAAA,GAGKD,MAAM,CAACE,GAAG,CAACR,KAAK,iBACbX,OAAA;MAAoBoB,OAAO,EAAEA,CAAA,KAAMV,iBAAiB,CAACC,KAAK,CAAE;MAAAO,QAAA,EAEvDP,KAAK,CAACU;IAAK,GAFNV,KAAK,CAACW,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGb,CACR,CAAC,eACF1B,OAAA;MAAQoB,OAAO,EAAEJ,wBAAyB;MAAAE,QAAA,EAAC;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEd,CAAC;AAACxB,EAAA,CA1CID,oBAAoB;EAAA,QACLJ,WAAW,EACXC,WAAW;AAAA;AAAA6B,EAAA,GAF1B1B,oBAAoB;AA4C1B,eAAeA,oBAAoB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}