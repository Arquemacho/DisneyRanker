{"ast":null,"code":"var _jsxFileName = \"/Users/nicocamachoa/Downloads/DisApp/disney-movie-ranker/src/Tournament.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport movies from './movies';\nimport MoviePoster from './MoviePoster';\nimport './TournamentStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tournament = () => {\n  _s();\n  const [currentRound, setCurrentRound] = useState([]);\n  const [winner, setWinner] = useState(null);\n  const [matchupIndex, setMatchupIndex] = useState(0);\n  useEffect(() => {\n    initializeTournament();\n  }, []);\n  const initializeTournament = () => {\n    const shuffledMovies = [...movies].sort(() => 0.5 - Math.random());\n    const rounds = [];\n    while (shuffledMovies.length > 1) {\n      let round = [];\n      for (let i = 0; i < shuffledMovies.length; i += 2) {\n        if (i + 1 < shuffledMovies.length) {\n          round.push([shuffledMovies[i], shuffledMovies[i + 1]]);\n        } else {\n          round.push([shuffledMovies[i]]);\n        }\n      }\n      rounds.push(round);\n      shuffledMovies.splice(0, shuffledMovies.length, ...round.map(matchup => matchup[Math.floor(Math.random() * matchup.length)]));\n    }\n    setCurrentRound(rounds[0]);\n    rounds.splice(0, 1);\n    localStorage.setItem('remainingRounds', JSON.stringify(rounds));\n  };\n  const selectMovie = movie => {\n    let remainingRounds = JSON.parse(localStorage.getItem('remainingRounds')) || [];\n    let currentRoundWinners = currentRound.map(matchup => matchup.includes(movie) ? movie : null).filter(winner => winner);\n    if (remainingRounds.length === 0 && currentRoundWinners.length === 1) {\n      setWinner(movie);\n      return;\n    }\n    if (matchupIndex < currentRound.length - 1) {\n      setMatchupIndex(matchupIndex + 1);\n    } else {\n      const nextRound = remainingRounds[0];\n      remainingRounds.splice(0, 1);\n      localStorage.setItem('remainingRounds', JSON.stringify(remainingRounds));\n      setCurrentRound(nextRound);\n      setMatchupIndex(0);\n    }\n  };\n  const getRoundName = numMovies => {\n    if (numMovies <= 2) return 'Final';\n    if (numMovies <= 4) return 'Semi Finals';\n    if (numMovies <= 8) return 'Quarter Finals';\n    if (numMovies <= 16) return 'Round of 16';\n    if (numMovies <= 32) return 'Round of 32';\n    if (numMovies <= 64) return 'Round of 64';\n    if (numMovies <= 128) return 'Round of 128';\n    if (numMovies <= 256) return 'Round of 256';\n    if (numMovies <= 512) return 'Round of 512';\n    if (numMovies <= 1024) return 'Round of 1024';\n    return '';\n  };\n  const currentMatchupNumber = matchupIndex + 1;\n  const totalMatchups = currentRound.length + automaticWinners.length / 2;\n  const roundName = getRoundName(currentRound.length * 2 + automaticWinners.length);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tournament Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), !winner && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Matchup: \", currentMatchupNumber, \" out of \", totalMatchups]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Round: \", roundName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), winner ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Winner:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MoviePoster, {\n        title: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [currentRound.length > 0 && currentRound[matchupIndex] && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"matchup\",\n        children: currentRound[matchupIndex].map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          onClick: () => selectMovie(movie),\n          children: /*#__PURE__*/_jsxDEV(MoviePoster, {\n            title: movie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 37\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }, this), matchupIndex > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goBack,\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(Tournament, \"pnXbmeKWJF2b8+Q+rMQajzyqAwg=\");\n_c = Tournament;\nexport default Tournament;\nvar _c;\n$RefreshReg$(_c, \"Tournament\");","map":{"version":3,"names":["React","useState","useEffect","movies","MoviePoster","jsxDEV","_jsxDEV","Tournament","_s","currentRound","setCurrentRound","winner","setWinner","matchupIndex","setMatchupIndex","initializeTournament","shuffledMovies","sort","Math","random","rounds","length","round","i","push","splice","map","matchup","floor","localStorage","setItem","JSON","stringify","selectMovie","movie","remainingRounds","parse","getItem","currentRoundWinners","includes","filter","nextRound","getRoundName","numMovies","currentMatchupNumber","totalMatchups","automaticWinners","roundName","children","fileName","_jsxFileName","lineNumber","columnNumber","title","className","index","onClick","goBack","_c","$RefreshReg$"],"sources":["/Users/nicocamachoa/Downloads/DisApp/disney-movie-ranker/src/Tournament.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport movies from './movies';\nimport MoviePoster from './MoviePoster';\nimport './TournamentStyles.css';\n\nconst Tournament = () => {\n    const [currentRound, setCurrentRound] = useState([]);\n    const [winner, setWinner] = useState(null);\n    const [matchupIndex, setMatchupIndex] = useState(0);\n\n    useEffect(() => {\n        initializeTournament();\n    }, []);\n\n    const initializeTournament = () => {\n        const shuffledMovies = [...movies].sort(() => 0.5 - Math.random());\n        const rounds = [];\n\n        while (shuffledMovies.length > 1) {\n            let round = [];\n            for (let i = 0; i < shuffledMovies.length; i += 2) {\n                if (i + 1 < shuffledMovies.length) {\n                    round.push([shuffledMovies[i], shuffledMovies[i + 1]]);\n                } else {\n                    round.push([shuffledMovies[i]]);\n                }\n            }\n            rounds.push(round);\n            shuffledMovies.splice(0, shuffledMovies.length, ...round.map(matchup => matchup[Math.floor(Math.random() * matchup.length)]));\n        }\n\n        setCurrentRound(rounds[0]);\n        rounds.splice(0, 1);\n        localStorage.setItem('remainingRounds', JSON.stringify(rounds));\n    };\n\n    const selectMovie = (movie) => {\n        let remainingRounds = JSON.parse(localStorage.getItem('remainingRounds')) || [];\n        let currentRoundWinners = currentRound.map(matchup => matchup.includes(movie) ? movie : null).filter(winner => winner);\n\n        if (remainingRounds.length === 0 && currentRoundWinners.length === 1) {\n            setWinner(movie);\n            return;\n        }\n\n        if (matchupIndex < currentRound.length - 1) {\n            setMatchupIndex(matchupIndex + 1);\n        } else {\n            const nextRound = remainingRounds[0];\n            remainingRounds.splice(0, 1);\n            localStorage.setItem('remainingRounds', JSON.stringify(remainingRounds));\n            setCurrentRound(nextRound);\n            setMatchupIndex(0);\n        }\n    };\n\n\n    const getRoundName = (numMovies) => {\n        if (numMovies <= 2) return 'Final';\n        if (numMovies <= 4) return 'Semi Finals';\n        if (numMovies <= 8) return 'Quarter Finals';\n        if (numMovies <= 16) return 'Round of 16';\n        if (numMovies <= 32) return 'Round of 32';\n        if (numMovies <= 64) return 'Round of 64';\n        if (numMovies <= 128) return 'Round of 128';\n        if (numMovies <= 256) return 'Round of 256';\n        if (numMovies <= 512) return 'Round of 512';\n        if (numMovies <= 1024) return 'Round of 1024';\n        return '';\n    };\n\n    const currentMatchupNumber = matchupIndex + 1;\n    const totalMatchups = currentRound.length + automaticWinners.length / 2;\n    const roundName = getRoundName(currentRound.length * 2 + automaticWinners.length);\n\n    return (\n        <div>\n            <h2>Tournament Mode</h2>\n            {!winner && (\n                <div>\n                    <p>Current Matchup: {currentMatchupNumber} out of {totalMatchups}</p>\n                    <p>Current Round: {roundName}</p>\n                </div>\n            )}\n            {winner ? (\n                <div>\n                    <h3>Winner:</h3>\n                    <MoviePoster title={winner} />\n                </div>\n            ) : (\n                <div>\n                    {currentRound.length > 0 && currentRound[matchupIndex] && (\n                        <div className=\"matchup\">\n                            {currentRound[matchupIndex].map((movie, index) => (\n                                <div key={index} className=\"card\" onClick={() => selectMovie(movie)}>\n                                    <MoviePoster title={movie} />\n                                </div>\n                            ))}\n                        </div>\n                    )}\n                    {matchupIndex > 0 && <button onClick={goBack}>Go Back</button>}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Tournament;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}