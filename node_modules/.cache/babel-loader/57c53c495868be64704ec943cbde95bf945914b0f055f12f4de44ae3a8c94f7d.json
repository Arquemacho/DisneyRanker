{"ast":null,"code":"var _jsxFileName = \"/Users/nicocamachoa/Downloads/DisApp/disney-movie-ranker/src/Tournament.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport movies from './movies';\nimport MoviePoster from './MoviePoster';\nimport './TournamentStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tournament = () => {\n  _s();\n  const [currentRound, setCurrentRound] = useState([]);\n  const [nextRound, setNextRound] = useState([]);\n  const [winner, setWinner] = useState('');\n  const totalMovies = movies.length;\n  const nextPowerOf2 = Math.pow(2, Math.ceil(Math.log2(totalMovies)));\n  const byes = nextPowerOf2 - totalMovies;\n  useEffect(() => {\n    const shuffledMovies = [...movies].sort(() => 0.5 - Math.random());\n    const moviesInRound = shuffledMovies.slice(byes);\n    setCurrentRound(moviesInRound);\n    setNextRound(shuffledMovies.slice(0, byes));\n    const handleKeyPress = event => {\n      if (event.key === 'ArrowRight' && nextRound.length < currentRound.length - 1) {\n        selectMovie(currentRound[nextRound.length]);\n      } else if (event.key === 'ArrowLeft' && nextRound.length < currentRound.length - 1) {\n        selectMovie(currentRound[nextRound.length + 1]);\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress);\n    };\n  }, []);\n  const selectMovie = movie => {\n    const updatedNextRound = [...nextRound, movie];\n    setNextRound(updatedNextRound);\n    const newIndex = matchupIndex + 2;\n    setMatchupIndex(newIndex);\n    if (newIndex >= currentRound.length) {\n      if (currentRound.length === 2) {\n        setWinner(movie);\n      } else {\n        setCurrentRound(updatedNextRound.slice(byes));\n        setNextRound([]);\n        setMatchupIndex(0);\n      }\n    }\n  };\n  const goBack = () => {\n    if (matchupIndex > 0) {\n      const prevIndex = matchupIndex - 2;\n      // Use setNextRound and nextRound instead of setSelectedMovies and selectedMovies\n      setNextRound(nextRound.slice(0, -1));\n      setMatchupIndex(prevIndex);\n    }\n  };\n  const getRoundName = numMovies => {\n    if (numMovies <= 2) return 'Final';\n    if (numMovies <= 4) return 'Semi Finals';\n    if (numMovies <= 8) return 'Quarter Finals';\n    if (numMovies <= 16) return 'Round of 16';\n    if (numMovies <= 32) return 'Round of 32';\n    if (numMovies <= 64) return 'Round of 64';\n    if (numMovies <= 128) return 'Round of 128';\n    if (numMovies <= 256) return 'Round of 256';\n    if (numMovies <= 512) return 'Round of 512';\n    if (numMovies <= 1024) return 'Round of 1024';\n    return '';\n  };\n  const currentMatchupNumber = nextRound.length - byes + 1;\n  const totalMatchups = Math.floor(currentRound.length / 2) + byes;\n  const activeCompetitors = currentRound.length + nextRound.length - byes;\n  const roundName = getRoundName(activeCompetitors);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tournament Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), !winner && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Matchup: \", currentMatchupNumber, \" out of \", totalMatchups]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Round: \", roundName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this), winner ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Winner:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MoviePoster, {\n        title: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [currentRound.length > 0 && matchupIndex < currentRound.length && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"matchup\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          onClick: () => selectMovie(currentRound[matchupIndex]),\n          children: /*#__PURE__*/_jsxDEV(MoviePoster, {\n            title: currentRound[matchupIndex]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          onClick: () => selectMovie(currentRound[matchupIndex + 1]),\n          children: /*#__PURE__*/_jsxDEV(MoviePoster, {\n            title: currentRound[matchupIndex + 1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }, this), matchupIndex > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goBack,\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(Tournament, \"2E8tHkgNhP1qj6mNGEGLpW6ghWA=\");\n_c = Tournament;\nexport default Tournament;\nvar _c;\n$RefreshReg$(_c, \"Tournament\");","map":{"version":3,"names":["React","useState","useEffect","movies","MoviePoster","jsxDEV","_jsxDEV","Tournament","_s","currentRound","setCurrentRound","nextRound","setNextRound","winner","setWinner","totalMovies","length","nextPowerOf2","Math","pow","ceil","log2","byes","shuffledMovies","sort","random","moviesInRound","slice","handleKeyPress","event","key","selectMovie","window","addEventListener","removeEventListener","movie","updatedNextRound","newIndex","matchupIndex","setMatchupIndex","goBack","prevIndex","getRoundName","numMovies","currentMatchupNumber","totalMatchups","floor","activeCompetitors","roundName","children","fileName","_jsxFileName","lineNumber","columnNumber","title","className","onClick","_c","$RefreshReg$"],"sources":["/Users/nicocamachoa/Downloads/DisApp/disney-movie-ranker/src/Tournament.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport movies from './movies';\nimport MoviePoster from './MoviePoster';\nimport './TournamentStyles.css';\n\nconst Tournament = () => {\n    const [currentRound, setCurrentRound] = useState([]);\n    const [nextRound, setNextRound] = useState([]);\n    const [winner, setWinner] = useState('');\n\n    const totalMovies = movies.length;\n    const nextPowerOf2 = Math.pow(2, Math.ceil(Math.log2(totalMovies)));\n    const byes = nextPowerOf2 - totalMovies;\n\n    useEffect(() => {\n        const shuffledMovies = [...movies].sort(() => 0.5 - Math.random());\n        const moviesInRound = shuffledMovies.slice(byes);\n        setCurrentRound(moviesInRound);\n        setNextRound(shuffledMovies.slice(0, byes));\n\n        const handleKeyPress = (event) => {\n            if (event.key === 'ArrowRight' && nextRound.length < currentRound.length - 1) {\n                selectMovie(currentRound[nextRound.length]);\n            } else if (event.key === 'ArrowLeft' && nextRound.length < currentRound.length - 1) {\n                selectMovie(currentRound[nextRound.length + 1]);\n            }\n        };\n\n        window.addEventListener('keydown', handleKeyPress);\n        return () => {\n            window.removeEventListener('keydown', handleKeyPress);\n        };\n    }, []);\n\n\n    const selectMovie = (movie) => {\n        const updatedNextRound = [...nextRound, movie];\n        setNextRound(updatedNextRound);\n        const newIndex = matchupIndex + 2;\n        setMatchupIndex(newIndex);\n\n        if (newIndex >= currentRound.length) {\n            if (currentRound.length === 2) {\n                setWinner(movie);\n            } else {\n                setCurrentRound(updatedNextRound.slice(byes));\n                setNextRound([]);\n                setMatchupIndex(0);\n            }\n        }\n    };\n\n    const goBack = () => {\n    if (matchupIndex > 0) {\n        const prevIndex = matchupIndex - 2;\n        // Use setNextRound and nextRound instead of setSelectedMovies and selectedMovies\n        setNextRound(nextRound.slice(0, -1));\n        setMatchupIndex(prevIndex);\n    }\n};\n\n\n    const getRoundName = (numMovies) => {\n        if (numMovies <= 2) return 'Final';\n        if (numMovies <= 4) return 'Semi Finals';\n        if (numMovies <= 8) return 'Quarter Finals';\n        if (numMovies <= 16) return 'Round of 16';\n        if (numMovies <= 32) return 'Round of 32';\n        if (numMovies <= 64) return 'Round of 64';\n        if (numMovies <= 128) return 'Round of 128';\n        if (numMovies <= 256) return 'Round of 256';\n        if (numMovies <= 512) return 'Round of 512';\n        if (numMovies <= 1024) return 'Round of 1024';\n        return '';\n    };\n\n    const currentMatchupNumber = nextRound.length - byes + 1;\n    const totalMatchups = Math.floor(currentRound.length / 2) + byes;\n    const activeCompetitors = currentRound.length + nextRound.length - byes;\n    const roundName = getRoundName(activeCompetitors);\n\n    return (\n        <div>\n            <h2>Tournament Mode</h2>\n            {!winner && (\n                <div>\n                    <p>Current Matchup: {currentMatchupNumber} out of {totalMatchups}</p>\n                    <p>Current Round: {roundName}</p>\n                </div>\n            )}\n            {winner ? (\n                <div>\n                    <h3>Winner:</h3>\n                    <MoviePoster title={winner} />\n                </div>\n            ) : (\n                <div>\n                    {currentRound.length > 0 && matchupIndex < currentRound.length && (\n                        <div className=\"matchup\">\n                            <div className=\"card\" onClick={() => selectMovie(currentRound[matchupIndex])}>\n                                <MoviePoster title={currentRound[matchupIndex]} />\n                            </div>\n                            <div className=\"card\" onClick={() => selectMovie(currentRound[matchupIndex + 1])}>\n                                <MoviePoster title={currentRound[matchupIndex + 1]} />\n                            </div>\n                        </div>\n                    )}\n                    {matchupIndex > 0 && <button onClick={goBack}>Go Back</button>}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Tournament;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}