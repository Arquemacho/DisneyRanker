{"ast":null,"code":"var _jsxFileName = \"/Users/nicocamachoa/Downloads/DisApp/disney-movie-ranker/src/Tournament.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport movies from './movies';\nimport MoviePoster from './MoviePoster';\nimport './TournamentStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tournament = () => {\n  _s();\n  const [currentRound, setCurrentRound] = useState([]);\n  const [nextRound, setNextRound] = useState([]);\n  const [matchupIndex, setMatchupIndex] = useState(0);\n  const [winner, setWinner] = useState('');\n  const totalMovies = movies.length;\n  const previousPowerOf2 = Math.pow(2, Math.floor(Math.log2(totalMovies)));\n  const difference = totalMovies - previousPowerOf2;\n  const initialMatchupsCount = difference * 2;\n  useEffect(() => {\n    const shuffledMovies = [...movies].sort(() => 0.5 - Math.random());\n    let initialMatchups = [];\n    let automaticWinners = shuffledMovies.slice(initialMatchupsCount);\n    for (let i = 0; i < initialMatchupsCount; i += 2) {\n      initialMatchups.push([shuffledMovies[i], shuffledMovies[i + 1]]);\n    }\n    setCurrentRound(initialMatchups);\n    setNextRound(automaticWinners);\n  }, []);\n  const selectMovie = movie => {\n    const updatedNextRound = [...nextRound, movie];\n    setNextRound(updatedNextRound);\n    if (updatedNextRound.length >= currentRound.length / 2) {\n      if (currentRound.length === 2) {\n        setWinner(movie);\n      } else {\n        setCurrentRound(updatedNextRound.slice(byes));\n        setNextRound([]);\n        setMatchupIndex(0);\n      }\n    } else {\n      setMatchupIndex(matchupIndex + 2);\n    }\n  };\n  const goBack = () => {\n    if (matchupIndex > 0) {\n      setNextRound(nextRound.slice(0, -1));\n      setMatchupIndex(matchupIndex - 2);\n    }\n  };\n  const getRoundName = numMovies => {\n    if (numMovies <= 2) return 'Final';\n    if (numMovies <= 4) return 'Semi Finals';\n    if (numMovies <= 8) return 'Quarter Finals';\n    if (numMovies <= 16) return 'Round of 16';\n    if (numMovies <= 32) return 'Round of 32';\n    if (numMovies <= 64) return 'Round of 64';\n    if (numMovies <= 128) return 'Round of 128';\n    if (numMovies <= 256) return 'Round of 256';\n    if (numMovies <= 512) return 'Round of 512';\n    if (numMovies <= 1024) return 'Round of 1024';\n    return '';\n  };\n  const currentMatchupNumber = Math.floor(matchupIndex / 2) + 1;\n  const totalMatchups = Math.floor(currentRound.length / 2) + byes;\n  const roundName = getRoundName(currentRound.length + nextRound.length - byes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tournament Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), !winner && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Matchup: \", currentMatchupNumber, \" out of \", totalMatchups]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Round: \", roundName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), winner ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Winner:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MoviePoster, {\n        title: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [currentRound.length > 0 && matchupIndex < currentRound.length && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"matchup\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          onClick: () => selectMovie(currentRound[matchupIndex]),\n          children: /*#__PURE__*/_jsxDEV(MoviePoster, {\n            title: currentRound[matchupIndex]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          onClick: () => selectMovie(currentRound[matchupIndex + 1]),\n          children: /*#__PURE__*/_jsxDEV(MoviePoster, {\n            title: currentRound[matchupIndex + 1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }, this), matchupIndex > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goBack,\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(Tournament, \"XqKkXRXHTFYmnVUm62Yt1Z4p80g=\");\n_c = Tournament;\nexport default Tournament;\nvar _c;\n$RefreshReg$(_c, \"Tournament\");","map":{"version":3,"names":["React","useState","useEffect","movies","MoviePoster","jsxDEV","_jsxDEV","Tournament","_s","currentRound","setCurrentRound","nextRound","setNextRound","matchupIndex","setMatchupIndex","winner","setWinner","totalMovies","length","previousPowerOf2","Math","pow","floor","log2","difference","initialMatchupsCount","shuffledMovies","sort","random","initialMatchups","automaticWinners","slice","i","push","selectMovie","movie","updatedNextRound","byes","goBack","getRoundName","numMovies","currentMatchupNumber","totalMatchups","roundName","children","fileName","_jsxFileName","lineNumber","columnNumber","title","className","onClick","_c","$RefreshReg$"],"sources":["/Users/nicocamachoa/Downloads/DisApp/disney-movie-ranker/src/Tournament.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport movies from './movies';\nimport MoviePoster from './MoviePoster';\nimport './TournamentStyles.css';\n\nconst Tournament = () => {\n    const [currentRound, setCurrentRound] = useState([]);\n    const [nextRound, setNextRound] = useState([]);\n    const [matchupIndex, setMatchupIndex] = useState(0);\n    const [winner, setWinner] = useState('');\n\n    const totalMovies = movies.length;\n    const previousPowerOf2 = Math.pow(2, Math.floor(Math.log2(totalMovies)));\n    const difference = totalMovies - previousPowerOf2;\n    const initialMatchupsCount = difference * 2;\n\n    useEffect(() => {\n        const shuffledMovies = [...movies].sort(() => 0.5 - Math.random());\n\n        let initialMatchups = [];\n        let automaticWinners = shuffledMovies.slice(initialMatchupsCount);\n\n        for (let i = 0; i < initialMatchupsCount; i += 2) {\n            initialMatchups.push([shuffledMovies[i], shuffledMovies[i + 1]]);\n        }\n\n        setCurrentRound(initialMatchups);\n        setNextRound(automaticWinners);\n    }, []);\n\n    const selectMovie = (movie) => {\n        const updatedNextRound = [...nextRound, movie];\n        setNextRound(updatedNextRound);\n\n        if (updatedNextRound.length >= currentRound.length / 2) {\n            if (currentRound.length === 2) {\n                setWinner(movie);\n            } else {\n                setCurrentRound(updatedNextRound.slice(byes));\n                setNextRound([]);\n                setMatchupIndex(0);\n            }\n        } else {\n            setMatchupIndex(matchupIndex + 2);\n        }\n    };\n\n    const goBack = () => {\n        if (matchupIndex > 0) {\n            setNextRound(nextRound.slice(0, -1));\n            setMatchupIndex(matchupIndex - 2);\n        }\n    };\n\n\n    const getRoundName = (numMovies) => {\n        if (numMovies <= 2) return 'Final';\n        if (numMovies <= 4) return 'Semi Finals';\n        if (numMovies <= 8) return 'Quarter Finals';\n        if (numMovies <= 16) return 'Round of 16';\n        if (numMovies <= 32) return 'Round of 32';\n        if (numMovies <= 64) return 'Round of 64';\n        if (numMovies <= 128) return 'Round of 128';\n        if (numMovies <= 256) return 'Round of 256';\n        if (numMovies <= 512) return 'Round of 512';\n        if (numMovies <= 1024) return 'Round of 1024';\n        return '';\n    };\n\n    const currentMatchupNumber = Math.floor(matchupIndex / 2) + 1;\n    const totalMatchups = Math.floor(currentRound.length / 2) + byes;\n    const roundName = getRoundName(currentRound.length + nextRound.length - byes);\n\n    return (\n        <div>\n            <h2>Tournament Mode</h2>\n            {!winner && (\n                <div>\n                    <p>Current Matchup: {currentMatchupNumber} out of {totalMatchups}</p>\n                    <p>Current Round: {roundName}</p>\n                </div>\n            )}\n            {winner ? (\n                <div>\n                    <h3>Winner:</h3>\n                    <MoviePoster title={winner} />\n                </div>\n            ) : (\n                <div>\n                    {currentRound.length > 0 && matchupIndex < currentRound.length && (\n                        <div className=\"matchup\">\n                            <div className=\"card\" onClick={() => selectMovie(currentRound[matchupIndex])}>\n                                <MoviePoster title={currentRound[matchupIndex]} />\n                            </div>\n                            <div className=\"card\" onClick={() => selectMovie(currentRound[matchupIndex + 1])}>\n                                <MoviePoster title={currentRound[matchupIndex + 1]} />\n                            </div>\n                        </div>\n                    )}\n                    {matchupIndex > 0 && <button onClick={goBack}>Go Back</button>}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Tournament;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}