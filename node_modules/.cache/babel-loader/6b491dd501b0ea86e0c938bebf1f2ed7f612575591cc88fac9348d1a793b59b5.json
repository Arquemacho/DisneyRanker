{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicoc\\\\DisneyRanker\\\\src\\\\admin\\\\PopularMoviesDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Chart, Bar } from 'react-chartjs-2';\nimport './admin.css'; // Import the CSS file\nimport BackToDashboardButton from './BackToDashboardButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst PopularMoviesDashboard = () => {\n  _s();\n  const [movieData, setMovieData] = useState([]);\n  const [detailedMovieStats, setDetailedMovieStats] = useState(null);\n  const [filteredMovieData, setFilteredMovieData] = useState([]);\n  useEffect(() => {\n    fetch('http://186.113.234.239:3001/api/popular-movies').then(res => res.json()).then(data => {\n      const filteredData = data.filter(movie => movie.winner.trim() !== '');\n      setMovieData(filteredData);\n      setFilteredMovieData(filteredData.slice(0, 10)); // Show top 10 by default\n    }).catch(err => console.error(err));\n  }, []);\n  const showTopWinners = () => {\n    const sortedData = [...movieData].sort((a, b) => b.count - a.count);\n    setFilteredMovieData(sortedData.slice(0, 10));\n  };\n  const showTopLosers = () => {\n    const sortedData = [...movieData].sort((a, b) => a.count - b.count);\n    setFilteredMovieData(sortedData.slice(0, 10));\n  };\n  const fetchMovieDetails = movieTitle => {\n    fetch(`http://186.113.234.239:3001/api/movie-details/${movieTitle}`).then(res => res.json()).then(data => setDetailedMovieStats(data)).catch(err => console.error(err));\n  };\n  const chartData = {\n    labels: filteredMovieData.map(movie => movie.winner),\n    datasets: [{\n      label: 'Number of Wins',\n      data: filteredMovieData.map(movie => movie.count),\n      backgroundColor: 'rgba(54, 162, 235, 0.2)',\n      borderColor: 'rgba(54, 162, 235, 1)',\n      borderWidth: 1\n    }]\n  };\n  const options = {\n    scales: {\n      y: {\n        beginAtZero: true,\n        type: 'linear'\n      },\n      x: {\n        type: 'category'\n      }\n    },\n    onClick: (e, element) => {\n      if (element.length > 0) {\n        const index = element[0].index;\n        const movieTitle = filteredMovieData[index].winner;\n        fetchMovieDetails(movieTitle);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popular-movies-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Popular Movies Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showTopWinners,\n        children: \"Show Top Winners\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showTopLosers,\n        children: \"Show Top Losers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), detailedMovieStats && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Details for \", detailedMovieStats.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wins: \", detailedMovieStats.wins]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Losses: \", detailedMovieStats.losses]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(BackToDashboardButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(PopularMoviesDashboard, \"uF9GBvDZji+Za0+wXmHxoY651j0=\");\n_c = PopularMoviesDashboard;\nexport default PopularMoviesDashboard;\nvar _c;\n$RefreshReg$(_c, \"PopularMoviesDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","BackToDashboardButton","jsxDEV","_jsxDEV","register","PopularMoviesDashboard","_s","movieData","setMovieData","detailedMovieStats","setDetailedMovieStats","filteredMovieData","setFilteredMovieData","fetch","then","res","json","data","filteredData","filter","movie","winner","trim","slice","catch","err","console","error","showTopWinners","sortedData","sort","a","b","count","showTopLosers","fetchMovieDetails","movieTitle","chartData","labels","map","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","type","x","onClick","e","element","length","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","wins","losses","_c","$RefreshReg$"],"sources":["C:/Users/nicoc/DisneyRanker/src/admin/PopularMoviesDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\nimport { Chart, Bar } from 'react-chartjs-2';\r\nimport './admin.css'; // Import the CSS file\r\nimport BackToDashboardButton from './BackToDashboardButton';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst PopularMoviesDashboard = () => {\r\n    const [movieData, setMovieData] = useState([]);\r\n    const [detailedMovieStats, setDetailedMovieStats] = useState(null);\r\n    const [filteredMovieData, setFilteredMovieData] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        fetch('http://186.113.234.239:3001/api/popular-movies')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                const filteredData = data.filter(movie => movie.winner.trim() !== '');\r\n                setMovieData(filteredData);\r\n                setFilteredMovieData(filteredData.slice(0, 10)); // Show top 10 by default\r\n            })\r\n            .catch(err => console.error(err));\r\n    }, []);\r\n\r\n    const showTopWinners = () => {\r\n        const sortedData = [...movieData].sort((a, b) => b.count - a.count);\r\n        setFilteredMovieData(sortedData.slice(0, 10));\r\n    };\r\n\r\n    const showTopLosers = () => {\r\n        const sortedData = [...movieData].sort((a, b) => a.count - b.count);\r\n        setFilteredMovieData(sortedData.slice(0, 10));\r\n    };\r\n\r\n    const fetchMovieDetails = (movieTitle) => {\r\n        fetch(`http://186.113.234.239:3001/api/movie-details/${movieTitle}`)\r\n            .then(res => res.json())\r\n            .then(data => setDetailedMovieStats(data))\r\n            .catch(err => console.error(err));\r\n    };\r\n\r\n\r\n    const chartData = {\r\n        labels: filteredMovieData.map(movie => movie.winner),\r\n        datasets: [{\r\n            label: 'Number of Wins',\r\n            data: filteredMovieData.map(movie => movie.count),\r\n            backgroundColor: 'rgba(54, 162, 235, 0.2)',\r\n            borderColor: 'rgba(54, 162, 235, 1)',\r\n            borderWidth: 1\r\n        }]\r\n    };\r\n\r\n    const options = {\r\n        scales: {\r\n            y: { beginAtZero: true, type: 'linear' },\r\n            x: { type: 'category' }\r\n        },\r\n        onClick: (e, element) => {\r\n            if (element.length > 0) {\r\n                const index = element[0].index;\r\n                const movieTitle = filteredMovieData[index].winner;\r\n                fetchMovieDetails(movieTitle);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"popular-movies-dashboard\">\r\n            <h2>Popular Movies Dashboard</h2>\r\n            <div className=\"dashboard-controls\">\r\n                <button onClick={showTopWinners}>Show Top Winners</button>\r\n                <button onClick={showTopLosers}>Show Top Losers</button>\r\n            </div>\r\n            <Bar data={chartData} options={options} />\r\n            {detailedMovieStats && (\r\n                <div className=\"movie-details\">\r\n                    <h3>Details for {detailedMovieStats.title}</h3>\r\n                    <p>Wins: {detailedMovieStats.wins}</p>\r\n                    <p>Losses: {detailedMovieStats.losses}</p>\r\n                </div>\r\n            )}\r\n\r\n            <BackToDashboardButton />\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default PopularMoviesDashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}