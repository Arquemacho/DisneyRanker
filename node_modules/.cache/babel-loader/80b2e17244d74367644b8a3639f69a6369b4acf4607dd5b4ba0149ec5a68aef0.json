{"ast":null,"code":"var _jsxFileName = \"/Users/nicocamachoa/Downloads/DisApp/disney-movie-ranker/src/Tournament.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport movies from './movies';\nimport MoviePoster from './MoviePoster';\nimport './TournamentStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tournament = () => {\n  _s();\n  const [currentRound, setCurrentRound] = useState([]);\n  const [nextRound, setNextRound] = useState([]);\n  const [winner, setWinner] = useState(null);\n  const [matchupIndex, setMatchupIndex] = useState(0);\n  const [totalMatchupsInRound, setTotalMatchupsInRound] = useState(0);\n  useEffect(() => {\n    initializeTournament();\n  }, []);\n  useEffect(() => {\n    // Automatically advance if only one movie in the matchup\n    if (currentRound[matchupIndex] && currentRound[matchupIndex].length === 1) {\n      selectMovie(currentRound[matchupIndex][0]);\n    }\n  }, [currentRound, matchupIndex]);\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [currentRound, matchupIndex]); // Removed selectMovie from dependencies\n\n  const initializeTournament = () => {\n    const shuffledMovies = [...movies].sort(() => 0.5 - Math.random());\n    const initialRound = [];\n    while (shuffledMovies.length) {\n      initialRound.push([shuffledMovies.shift(), shuffledMovies.shift()].filter(Boolean));\n    }\n    setCurrentRound(initialRound);\n    setTotalMatchupsInRound(initialRound.length);\n    setNextRound([]);\n    setWinner(null);\n    setMatchupIndex(0);\n  };\n  const handleKeyDown = event => {\n    if (event.key === 'ArrowRight' || event.key === 'ArrowLeft') {\n      const currentMatchup = currentRound[matchupIndex];\n      if (!currentMatchup || currentMatchup.length === 0) return;\n\n      // Select the first movie for ArrowRight, second for ArrowLeft\n      const movieIndex = event.key === 'ArrowRight' ? 0 : 1;\n\n      // Check if the movie exists in the matchup before selecting\n      if (currentMatchup[movieIndex]) {\n        selectMovie(currentMatchup[movieIndex]);\n      }\n    }\n  };\n  function selectMovie(movie) {\n    if (winner) return;\n    let updatedNextRound = [...nextRound, movie];\n    if (matchupIndex === currentRound.length - 1) {\n      if (updatedNextRound.length === 1) {\n        setWinner(updatedNextRound[0]);\n      } else {\n        const newRound = createRound(updatedNextRound);\n        setCurrentRound(newRound);\n        setTotalMatchupsInRound(newRound.length);\n        setNextRound([]);\n        setMatchupIndex(0);\n      }\n    } else {\n      setNextRound(updatedNextRound);\n      setMatchupIndex(prevIndex => prevIndex + 1);\n    }\n  }\n  const createRound = winners => {\n    let newRound = [];\n    for (let i = 0; i < winners.length; i += 2) {\n      newRound.push(winners.slice(i, i + 2));\n    }\n    return newRound;\n  };\n  const getRoundName = numMovies => {\n    if (numMovies <= 2) return 'Final';\n    if (numMovies <= 4) return 'Semi Finals';\n    if (numMovies <= 8) return 'Quarter Finals';\n    if (numMovies <= 16) return 'Round of 16';\n    if (numMovies <= 32) return 'Round of 32';\n    if (numMovies <= 64) return 'Round of 64';\n    if (numMovies <= 128) return 'Round of 128';\n    if (numMovies <= 256) return 'Round of 256';\n    if (numMovies <= 512) return 'Round of 512';\n    if (numMovies <= 1024) return 'Round of 1024';\n    return '';\n  };\n  if (winner) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Winner:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MoviePoster, {\n        title: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this);\n  }\n  const roundName = getRoundName(currentRound.length * 2);\n  const totalMatchups = currentRound.length + Math.ceil(nextRound.length / 2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tournament Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), !winner && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Matchup: \", matchupIndex + 1, \" out of \", totalMatchupsInRound]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Round: \", roundName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"matchup\",\n        children: currentRound[matchupIndex] && currentRound[matchupIndex].map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          onClick: () => selectMovie(movie),\n          children: /*#__PURE__*/_jsxDEV(MoviePoster, {\n            title: movie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n};\n_s(Tournament, \"OobPLZPf2CSi2Uq5VSWCqdkcqv0=\");\n_c = Tournament;\nexport default Tournament;\nvar _c;\n$RefreshReg$(_c, \"Tournament\");","map":{"version":3,"names":["React","useState","useEffect","movies","MoviePoster","jsxDEV","_jsxDEV","Tournament","_s","currentRound","setCurrentRound","nextRound","setNextRound","winner","setWinner","matchupIndex","setMatchupIndex","totalMatchupsInRound","setTotalMatchupsInRound","initializeTournament","length","selectMovie","window","addEventListener","handleKeyDown","removeEventListener","shuffledMovies","sort","Math","random","initialRound","push","shift","filter","Boolean","event","key","currentMatchup","movieIndex","movie","updatedNextRound","newRound","createRound","prevIndex","winners","i","slice","getRoundName","numMovies","children","fileName","_jsxFileName","lineNumber","columnNumber","title","roundName","totalMatchups","ceil","className","map","index","onClick","_c","$RefreshReg$"],"sources":["/Users/nicocamachoa/Downloads/DisApp/disney-movie-ranker/src/Tournament.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport movies from './movies';\nimport MoviePoster from './MoviePoster';\nimport './TournamentStyles.css';\n\nconst Tournament = () => {\n    const [currentRound, setCurrentRound] = useState([]);\n    const [nextRound, setNextRound] = useState([]);\n    const [winner, setWinner] = useState(null);\n    const [matchupIndex, setMatchupIndex] = useState(0);\n    const [totalMatchupsInRound, setTotalMatchupsInRound] = useState(0);\n\n    useEffect(() => {\n        initializeTournament();\n    }, []);\n\n    useEffect(() => {\n        // Automatically advance if only one movie in the matchup\n        if (currentRound[matchupIndex] && currentRound[matchupIndex].length === 1) {\n            selectMovie(currentRound[matchupIndex][0]);\n        }\n    }, [currentRound, matchupIndex]);\n\n    useEffect(() => {\n        window.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [currentRound, matchupIndex]); // Removed selectMovie from dependencies\n\n\n    const initializeTournament = () => {\n        const shuffledMovies = [...movies].sort(() => 0.5 - Math.random());\n        const initialRound = [];\n\n        while (shuffledMovies.length) {\n            initialRound.push([shuffledMovies.shift(), shuffledMovies.shift()].filter(Boolean));\n        }\n\n        setCurrentRound(initialRound);\n        setTotalMatchupsInRound(initialRound.length);\n        setNextRound([]);\n        setWinner(null);\n        setMatchupIndex(0);\n    };\n\n    const handleKeyDown = (event) => {\n        if (event.key === 'ArrowRight' || event.key === 'ArrowLeft') {\n            const currentMatchup = currentRound[matchupIndex];\n            if (!currentMatchup || currentMatchup.length === 0) return;\n\n            // Select the first movie for ArrowRight, second for ArrowLeft\n            const movieIndex = event.key === 'ArrowRight' ? 0 : 1;\n\n            // Check if the movie exists in the matchup before selecting\n            if (currentMatchup[movieIndex]) {\n                selectMovie(currentMatchup[movieIndex]);\n            }\n        }\n    };\n\n    function selectMovie(movie) {\n        if (winner) return;\n\n        let updatedNextRound = [...nextRound, movie];\n\n        if (matchupIndex === currentRound.length - 1) {\n            if (updatedNextRound.length === 1) {\n                setWinner(updatedNextRound[0]);\n            } else {\n                const newRound = createRound(updatedNextRound);\n                setCurrentRound(newRound);\n                setTotalMatchupsInRound(newRound.length);\n                setNextRound([]);\n                setMatchupIndex(0);\n            }\n        } else {\n            setNextRound(updatedNextRound);\n            setMatchupIndex(prevIndex => prevIndex + 1);\n        }\n    }\n\n    const createRound = (winners) => {\n        let newRound = [];\n        for (let i = 0; i < winners.length; i += 2) {\n            newRound.push(winners.slice(i, i + 2));\n        }\n        return newRound;\n    };\n\n    const getRoundName = (numMovies) => {\n        if (numMovies <= 2) return 'Final';\n        if (numMovies <= 4) return 'Semi Finals';\n        if (numMovies <= 8) return 'Quarter Finals';\n        if (numMovies <= 16) return 'Round of 16';\n        if (numMovies <= 32) return 'Round of 32';\n        if (numMovies <= 64) return 'Round of 64';\n        if (numMovies <= 128) return 'Round of 128';\n        if (numMovies <= 256) return 'Round of 256';\n        if (numMovies <= 512) return 'Round of 512';\n        if (numMovies <= 1024) return 'Round of 1024';\n        return '';\n    };\n\n    if (winner) {\n        return (\n            <div>\n                <h3>Winner:</h3>\n                <MoviePoster title={winner} />\n            </div>\n        );\n    }\n\n    const roundName = getRoundName(currentRound.length * 2);\n    const totalMatchups = currentRound.length + Math.ceil(nextRound.length / 2);\n\n    return (\n        <div>\n            <h2>Tournament Mode</h2>\n            {!winner && (\n                <div>\n                    <p>Current Matchup: {matchupIndex + 1} out of {totalMatchupsInRound}</p>\n                    <p>Current Round: {roundName}</p>\n                    <div className=\"matchup\">\n                        {currentRound[matchupIndex] && currentRound[matchupIndex].map((movie, index) => (\n                            <div key={index} className=\"card\" onClick={() => selectMovie(movie)}>\n                                <MoviePoster title={movie} />\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Tournament;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}