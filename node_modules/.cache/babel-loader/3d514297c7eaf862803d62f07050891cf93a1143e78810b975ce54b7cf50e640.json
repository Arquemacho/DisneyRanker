{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicoc\\\\DisneyRanker\\\\src\\\\admin\\\\MoviesManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './admin.css'; // Import the CSS file\nimport BackToDashboardButton from './BackToDashboardButton'; // Correct path as per your project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoviesManagement = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [newMovieTitle, setNewMovieTitle] = useState('');\n  const [newMoviePosterUrl, setNewMoviePosterUrl] = useState('');\n  const history = useHistory();\n  const navigateToDashboard = () => {\n    history.push('/admin-dashboard'); // Update with your admin dashboard route\n  };\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  const fetchMovies = () => {\n    fetch('http://186.113.234.239:3001/api/movies').then(res => res.json()).then(data => setMovies(data)).catch(err => console.error(err));\n  };\n  const addMovie = () => {\n    // Add movie\n    fetch('http://186.113.234.239:3001/api/add-movie', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: newMovieTitle\n      })\n    }).then(response => response.json()).then(() => {\n      // Add poster\n      fetch('http://186.113.234.239:3001/api/add-poster', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          movieTitle: newMovieTitle,\n          posterUrl: newMoviePosterUrl\n        })\n      });\n    }).then(() => {\n      setNewMovieTitle('');\n      setNewMoviePosterUrl('');\n      fetchMovies(); // Refresh the movie list\n    }).catch(err => console.error('Failed to add movie:', err));\n  };\n  const deleteMovie = title => {\n    fetch('http://186.113.234.239:3001/api/delete-movie', {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title\n      })\n    }).then(() => {\n      fetchMovies(); // Refresh the movie list\n    }).catch(err => console.error('Failed to delete movie:', err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movies-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-movie-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMovieTitle,\n        onChange: e => setNewMovieTitle(e.target.value),\n        placeholder: \"Movie Title\",\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMoviePosterUrl,\n        onChange: e => setNewMoviePosterUrl(e.target.value),\n        placeholder: \"Poster URL\",\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addMovie,\n        className: \"action-button\",\n        children: \"Add Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-list\",\n      children: movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteMovie(movie.title),\n          className: \"delete-button\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BackToDashboardButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(MoviesManagement, \"MJgQbg6g3jrfhws6Fp9QGdsYp68=\", true);\n_c = MoviesManagement;\nexport default MoviesManagement;\nvar _c;\n$RefreshReg$(_c, \"MoviesManagement\");","map":{"version":3,"names":["React","useState","useEffect","BackToDashboardButton","jsxDEV","_jsxDEV","MoviesManagement","_s","movies","setMovies","newMovieTitle","setNewMovieTitle","newMoviePosterUrl","setNewMoviePosterUrl","history","useHistory","navigateToDashboard","push","fetchMovies","fetch","then","res","json","data","catch","err","console","error","addMovie","method","headers","body","JSON","stringify","title","response","movieTitle","posterUrl","deleteMovie","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","movie","index","_c","$RefreshReg$"],"sources":["C:/Users/nicoc/DisneyRanker/src/admin/MoviesManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './admin.css'; // Import the CSS file\r\nimport BackToDashboardButton from './BackToDashboardButton'; // Correct path as per your project structure\r\n\r\nconst MoviesManagement = () => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [newMovieTitle, setNewMovieTitle] = useState('');\r\n    const [newMoviePosterUrl, setNewMoviePosterUrl] = useState('');\r\n    const history = useHistory();\r\n\r\n    const navigateToDashboard = () => {\r\n        history.push('/admin-dashboard'); // Update with your admin dashboard route\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchMovies();\r\n    }, []);\r\n\r\n    const fetchMovies = () => {\r\n        fetch('http://186.113.234.239:3001/api/movies')\r\n            .then(res => res.json())\r\n            .then(data => setMovies(data))\r\n            .catch(err => console.error(err));\r\n    };\r\n\r\n    const addMovie = () => {\r\n        // Add movie\r\n        fetch('http://186.113.234.239:3001/api/add-movie', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ title: newMovieTitle })\r\n        })\r\n        .then(response => response.json())\r\n        .then(() => {\r\n            // Add poster\r\n            fetch('http://186.113.234.239:3001/api/add-poster', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ movieTitle: newMovieTitle, posterUrl: newMoviePosterUrl })\r\n            })\r\n        })\r\n        .then(() => {\r\n            setNewMovieTitle('');\r\n            setNewMoviePosterUrl('');\r\n            fetchMovies(); // Refresh the movie list\r\n        })\r\n        .catch(err => console.error('Failed to add movie:', err));\r\n    };\r\n\r\n    const deleteMovie = (title) => {\r\n        fetch('http://186.113.234.239:3001/api/delete-movie', {\r\n            method: 'DELETE',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ title })\r\n        })\r\n        .then(() => {\r\n            fetchMovies(); // Refresh the movie list\r\n        })\r\n        .catch(err => console.error('Failed to delete movie:', err));\r\n    };\r\n\r\n    return (\r\n        <div className=\"movies-management\">\r\n            <h2>Manage Movies</h2>\r\n            <div className=\"add-movie-form\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={newMovieTitle}\r\n                    onChange={(e) => setNewMovieTitle(e.target.value)}\r\n                    placeholder=\"Movie Title\"\r\n                    className=\"input-field\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    value={newMoviePosterUrl}\r\n                    onChange={(e) => setNewMoviePosterUrl(e.target.value)}\r\n                    placeholder=\"Poster URL\"\r\n                    className=\"input-field\"\r\n                />\r\n                <button onClick={addMovie} className=\"action-button\">Add Movie</button>\r\n            </div>\r\n\r\n            <div className=\"movie-list\">\r\n                {movies.map((movie, index) => (\r\n                    <div key={index} className=\"movie-item\">\r\n                        <span>{movie.title}</span>\r\n                        <button onClick={() => deleteMovie(movie.title)} className=\"delete-button\">Delete</button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <BackToDashboardButton />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MoviesManagement;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}