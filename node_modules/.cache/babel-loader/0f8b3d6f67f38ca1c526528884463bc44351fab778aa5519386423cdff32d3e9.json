{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicoc\\\\OneDrive\\\\Documents\\\\GitHub\\\\DisneyRanker\\\\src\\\\Tournament.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport movies from './movies';\nimport MoviePoster from './MoviePoster';\nimport { useLocation } from 'react-router-dom';\nimport './TournamentStyles.css';\nimport confetti from 'canvas-confetti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tournament = () => {\n  _s();\n  var _location$state;\n  const [currentRound, setCurrentRound] = useState([]);\n  const [nextRound, setNextRound] = useState([]);\n  const [winner, setWinner] = useState(null);\n  const [matchupIndex, setMatchupIndex] = useState(0);\n  const [totalMatchupsInRound, setTotalMatchupsInRound] = useState(0);\n  const location = useLocation();\n  const moviesFromSelection = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.movies) || [];\n  const [selectionHistory, setSelectionHistory] = useState([]);\n  const [sessionID, setSessionID] = useState('');\n  useEffect(() => {\n    // Generate a session ID when the component mounts\n    setSessionID(generateUniqueID());\n  }, []);\n  function generateUniqueID() {\n    return Math.random().toString(36).substr(2, 9);\n  }\n  useEffect(() => {\n    if (moviesFromSelection.length > 0) {\n      initializeTournament(moviesFromSelection);\n    } else {\n      // Handle case where no movies are passed\n      initializeTournament(movies);\n    }\n  }, [moviesFromSelection]);\n  useEffect(() => {\n    // Automatically advance if only one movie in the matchup\n    if (currentRound[matchupIndex] && currentRound[matchupIndex].length === 1) {\n      selectMovie(currentRound[matchupIndex][0]);\n    }\n  }, [currentRound, matchupIndex]);\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [currentRound, matchupIndex]);\n  const initializeTournament = moviesArray => {\n    const shuffledMovies = [...moviesArray].sort(() => 0.5 - Math.random());\n    const initialRound = [];\n    while (shuffledMovies.length) {\n      initialRound.push([shuffledMovies.shift(), shuffledMovies.shift()].filter(Boolean));\n    }\n    setCurrentRound(initialRound);\n    setTotalMatchupsInRound(initialRound.length);\n    setNextRound([]);\n    setWinner(null);\n    setMatchupIndex(0);\n  };\n  const handleKeyDown = event => {\n    const currentMatchup = currentRound[matchupIndex];\n    if (!currentMatchup || currentMatchup.length === 0) return;\n    if (event.key === 'ArrowRight' || event.key === 'ArrowLeft') {\n      // Existing logic for selecting movies\n      const movieIndex = event.key === 'ArrowLeft' ? 0 : 1;\n      if (currentMatchup[movieIndex]) {\n        selectMovie(currentMatchup[movieIndex]);\n      }\n    } else if (event.key === 'a' && currentMatchup.length > 0) {\n      // 'A' key pressed, delete the movie on the left\n      deleteMovie(currentMatchup[0]);\n    } else if (event.key === 's' && currentMatchup.length > 1) {\n      // 'S' key pressed, delete the movie on the right\n      deleteMovie(currentMatchup[1]);\n    }\n  };\n  function selectMovie(movie) {\n    if (winner) return;\n    let updatedNextRound = [...nextRound, movie];\n\n    // Log the selection\n    const selection = {\n      movie: movie,\n      // Replace with movie ID if available\n      round: currentRound.length,\n      timestamp: new Date().toISOString()\n    };\n\n    // Update the selection history\n    setSelectionHistory(prevHistory => [...prevHistory, selection]);\n\n    // Send selection data to the backend\n    sendDataToBackend(selection);\n    if (matchupIndex === currentRound.length - 1) {\n      if (updatedNextRound.length === 1) {\n        setWinner(updatedNextRound[0]);\n      } else {\n        const newRound = createRound(updatedNextRound);\n        setCurrentRound(newRound);\n        setTotalMatchupsInRound(newRound.length);\n        setNextRound([]);\n        setMatchupIndex(0);\n      }\n    } else {\n      setNextRound(updatedNextRound);\n      setMatchupIndex(prevIndex => prevIndex + 1);\n    }\n  }\n  async function sendDataToBackend(selection) {\n    try {\n      await fetch('http://your-backend-url/api/selection', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(selection)\n      });\n    } catch (error) {\n      console.error('Error sending selection data to backend:', error);\n    }\n  }\n  const deleteMovie = async movieTitle => {\n    try {\n      // Update the URL to point to your backend server on port 3001\n      const response = await fetch('http://localhost:3001/api/delete-movie', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          movieName: movieTitle\n        })\n      });\n      if (response.ok) {\n        // Assuming the response is successful, update the state to remove the movie from the UI\n        setCurrentRound(currentRound => currentRound.map(matchup => matchup.filter(movie => movie !== movieTitle)));\n        setNextRound(nextRound => nextRound.filter(movie => movie !== movieTitle));\n      } else {\n        // Handle any errors here\n        console.error('Failed to delete the movie');\n        const resText = await response.text();\n        console.log('Server response:', resText);\n      }\n    } catch (error) {\n      console.error('Error deleting movie:', error);\n    }\n  };\n  const createRound = winners => {\n    let newRound = [];\n    for (let i = 0; i < winners.length; i += 2) {\n      newRound.push(winners.slice(i, i + 2));\n    }\n    return newRound;\n  };\n  const getRoundName = numMovies => {\n    if (numMovies <= 2) return 'Final';\n    if (numMovies <= 4) return 'Semi Final';\n    if (numMovies <= 8) return 'Cuartos de Final';\n    if (numMovies <= 16) return 'Octavos de Final';\n    if (numMovies <= 32) return 'Ronda de 32';\n    if (numMovies <= 64) return 'Ronda de 64';\n    if (numMovies <= 128) return 'Ronda de 128';\n    if (numMovies <= 256) return 'Ronda de 256';\n    if (numMovies <= 512) return 'Ronda de 512';\n    if (numMovies <= 1024) return 'Ronda de 1024';\n    return '';\n  };\n  if (winner) {\n    // Trigger confetti\n    confetti({\n      particleCount: 300,\n      spread: 100,\n      origin: {\n        y: 0.6\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"winner-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Winner:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MoviePoster, {\n        title: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this);\n  }\n  const roundName = getRoundName(currentRound.length * 2);\n  const totalMatchups = currentRound.length + Math.ceil(nextRound.length / 2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tournament-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Modo Torneo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), !winner && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tournament-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Enfrentamiento Actual: \", matchupIndex + 1, \" de \", totalMatchupsInRound]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Ronda Actual: \", roundName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"matchup\",\n        children: currentRound[matchupIndex] && currentRound[matchupIndex].map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          onClick: () => selectMovie(movie),\n          children: [\" \", /*#__PURE__*/_jsxDEV(MoviePoster, {\n            title: movie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 33\n          }, this)]\n        }, `${movie}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 9\n  }, this);\n};\n_s(Tournament, \"nyyaPsPW4yGGc/msBndNGXYebaE=\", false, function () {\n  return [useLocation];\n});\n_c = Tournament;\nexport default Tournament;\nvar _c;\n$RefreshReg$(_c, \"Tournament\");","map":{"version":3,"names":["React","useState","useEffect","movies","MoviePoster","useLocation","confetti","jsxDEV","_jsxDEV","Tournament","_s","_location$state","currentRound","setCurrentRound","nextRound","setNextRound","winner","setWinner","matchupIndex","setMatchupIndex","totalMatchupsInRound","setTotalMatchupsInRound","location","moviesFromSelection","state","selectionHistory","setSelectionHistory","sessionID","setSessionID","generateUniqueID","Math","random","toString","substr","length","initializeTournament","selectMovie","window","addEventListener","handleKeyDown","removeEventListener","moviesArray","shuffledMovies","sort","initialRound","push","shift","filter","Boolean","event","currentMatchup","key","movieIndex","deleteMovie","movie","updatedNextRound","selection","round","timestamp","Date","toISOString","prevHistory","sendDataToBackend","newRound","createRound","prevIndex","fetch","method","headers","body","JSON","stringify","error","console","movieTitle","response","movieName","ok","map","matchup","resText","text","log","winners","i","slice","getRoundName","numMovies","particleCount","spread","origin","y","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","roundName","totalMatchups","ceil","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/nicoc/OneDrive/Documents/GitHub/DisneyRanker/src/Tournament.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport movies from './movies';\r\nimport MoviePoster from './MoviePoster';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './TournamentStyles.css';\r\nimport confetti from 'canvas-confetti';\r\n\r\nconst Tournament = () => {\r\n    const [currentRound, setCurrentRound] = useState([]);\r\n    const [nextRound, setNextRound] = useState([]);\r\n    const [winner, setWinner] = useState(null);\r\n    const [matchupIndex, setMatchupIndex] = useState(0);\r\n    const [totalMatchupsInRound, setTotalMatchupsInRound] = useState(0);\r\n    const location = useLocation();\r\n    const moviesFromSelection = location.state?.movies || [];\r\n    const [selectionHistory, setSelectionHistory] = useState([]);\r\n    const [sessionID, setSessionID] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Generate a session ID when the component mounts\r\n        setSessionID(generateUniqueID());\r\n    }, []);\r\n\r\n    \r\n    function generateUniqueID() {\r\n        return Math.random().toString(36).substr(2, 9);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (moviesFromSelection.length > 0) {\r\n            initializeTournament(moviesFromSelection);\r\n        } else {\r\n            // Handle case where no movies are passed\r\n            initializeTournament(movies);\r\n        }\r\n    }, [moviesFromSelection]);\r\n\r\n    useEffect(() => {\r\n        // Automatically advance if only one movie in the matchup\r\n        if (currentRound[matchupIndex] && currentRound[matchupIndex].length === 1) {\r\n            selectMovie(currentRound[matchupIndex][0]);\r\n        }\r\n    }, [currentRound, matchupIndex]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, [currentRound, matchupIndex]);\r\n\r\n\r\n\r\n    const initializeTournament = (moviesArray) => {\r\n        const shuffledMovies = [...moviesArray].sort(() => 0.5 - Math.random());\r\n        const initialRound = [];\r\n\r\n        while (shuffledMovies.length) {\r\n            initialRound.push([shuffledMovies.shift(), shuffledMovies.shift()].filter(Boolean));\r\n        }\r\n\r\n        setCurrentRound(initialRound);\r\n        setTotalMatchupsInRound(initialRound.length);\r\n        setNextRound([]);\r\n        setWinner(null);\r\n        setMatchupIndex(0);\r\n    };\r\n\r\n    const handleKeyDown = (event) => {\r\n        const currentMatchup = currentRound[matchupIndex];\r\n        if (!currentMatchup || currentMatchup.length === 0) return;\r\n\r\n        if (event.key === 'ArrowRight' || event.key === 'ArrowLeft') {\r\n            // Existing logic for selecting movies\r\n            const movieIndex = event.key === 'ArrowLeft' ? 0 : 1;\r\n            if (currentMatchup[movieIndex]) {\r\n                selectMovie(currentMatchup[movieIndex]);\r\n            }\r\n        } else if (event.key === 'a' && currentMatchup.length > 0) {\r\n            // 'A' key pressed, delete the movie on the left\r\n            deleteMovie(currentMatchup[0]);\r\n        } else if (event.key === 's' && currentMatchup.length > 1) {\r\n            // 'S' key pressed, delete the movie on the right\r\n            deleteMovie(currentMatchup[1]);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    function selectMovie(movie) {\r\n        if (winner) return;\r\n    \r\n        let updatedNextRound = [...nextRound, movie];\r\n    \r\n        // Log the selection\r\n        const selection = {\r\n            movie: movie, // Replace with movie ID if available\r\n            round: currentRound.length,\r\n            timestamp: new Date().toISOString()\r\n        };\r\n    \r\n        // Update the selection history\r\n        setSelectionHistory(prevHistory => [...prevHistory, selection]);\r\n    \r\n        // Send selection data to the backend\r\n        sendDataToBackend(selection);\r\n    \r\n        if (matchupIndex === currentRound.length - 1) {\r\n            if (updatedNextRound.length === 1) {\r\n                setWinner(updatedNextRound[0]);\r\n            } else {\r\n                const newRound = createRound(updatedNextRound);\r\n                setCurrentRound(newRound);\r\n                setTotalMatchupsInRound(newRound.length);\r\n                setNextRound([]);\r\n                setMatchupIndex(0);\r\n            }\r\n        } else {\r\n            setNextRound(updatedNextRound);\r\n            setMatchupIndex(prevIndex => prevIndex + 1);\r\n        }\r\n    }\r\n    \r\n    async function sendDataToBackend(selection) {\r\n        try {\r\n            await fetch('http://your-backend-url/api/selection', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(selection),\r\n            });\r\n        } catch (error) {\r\n            console.error('Error sending selection data to backend:', error);\r\n        }\r\n    }    \r\n    \r\n    const deleteMovie = async (movieTitle) => {\r\n        try {\r\n            // Update the URL to point to your backend server on port 3001\r\n            const response = await fetch('http://localhost:3001/api/delete-movie', {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ movieName: movieTitle }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                // Assuming the response is successful, update the state to remove the movie from the UI\r\n                setCurrentRound(currentRound => currentRound.map(matchup => matchup.filter(movie => movie !== movieTitle)));\r\n                setNextRound(nextRound => nextRound.filter(movie => movie !== movieTitle));\r\n            } else {\r\n                // Handle any errors here\r\n                console.error('Failed to delete the movie');\r\n                const resText = await response.text();\r\n                console.log('Server response:', resText);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting movie:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const createRound = (winners) => {\r\n        let newRound = [];\r\n        for (let i = 0; i < winners.length; i += 2) {\r\n            newRound.push(winners.slice(i, i + 2));\r\n        }\r\n        return newRound;\r\n    };\r\n\r\n    const getRoundName = (numMovies) => {\r\n        if (numMovies <= 2) return 'Final';\r\n        if (numMovies <= 4) return 'Semi Final';\r\n        if (numMovies <= 8) return 'Cuartos de Final';\r\n        if (numMovies <= 16) return 'Octavos de Final';\r\n        if (numMovies <= 32) return 'Ronda de 32';\r\n        if (numMovies <= 64) return 'Ronda de 64';\r\n        if (numMovies <= 128) return 'Ronda de 128';\r\n        if (numMovies <= 256) return 'Ronda de 256';\r\n        if (numMovies <= 512) return 'Ronda de 512';\r\n        if (numMovies <= 1024) return 'Ronda de 1024';\r\n        return '';\r\n    };\r\n\r\n    if (winner) {\r\n        // Trigger confetti\r\n        confetti({\r\n            particleCount: 300,\r\n            spread: 100,\r\n            origin: { y: 0.6 }\r\n        });\r\n\r\n        return (\r\n            <div className=\"winner-container\">\r\n                <h3>Winner:</h3>\r\n                <MoviePoster title={winner} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const roundName = getRoundName(currentRound.length * 2);\r\n    const totalMatchups = currentRound.length + Math.ceil(nextRound.length / 2);\r\n\r\n    return (\r\n        <div className=\"tournament-container\">\r\n            <h2>Modo Torneo</h2>\r\n            {!winner && (\r\n                <div>\r\n                    <div className=\"tournament-info\">\r\n                        <p>Enfrentamiento Actual: {matchupIndex + 1} de {totalMatchupsInRound}</p>\r\n                        <p>Ronda Actual: {roundName}</p>\r\n                    </div>\r\n                    <div className=\"matchup\">\r\n                        {currentRound[matchupIndex] && currentRound[matchupIndex].map((movie, index) => (\r\n                            <div key={`${movie}-${index}`} className=\"card\" onClick={() => selectMovie(movie)}> {/* Change made here */}\r\n                                <MoviePoster title={movie} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tournament;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}