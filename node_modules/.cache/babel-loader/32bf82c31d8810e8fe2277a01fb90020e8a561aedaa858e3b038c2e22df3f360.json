{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicoc\\\\DisneyRanker\\\\src\\\\admin\\\\PopularMoviesDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chart } from 'react-chartjs-2';\nimport './admin.css'; // Import the CSS file\nimport BackToDashboardButton from './BackToDashboardButton'; // Correct path as per your project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PopularMoviesDashboard = () => {\n  _s();\n  const [movieData, setMovieData] = useState([]);\n  useEffect(() => {\n    fetch('http://186.113.234.239:3001/api/popular-movies').then(res => res.json()).then(data => setMovieData(data)).catch(err => console.error(err));\n  }, []);\n\n  // Prepare data for Chart.js\n  const chartData = {\n    labels: movieData.map(movie => movie.winner),\n    datasets: [{\n      label: 'Number of Wins',\n      data: movieData.map(movie => movie.count),\n      backgroundColor: 'rgba(54, 162, 235, 0.2)',\n      borderColor: 'rgba(54, 162, 235, 1)',\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popular-movies-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Popular Movies Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      type: \"bar\",\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BackToDashboardButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(PopularMoviesDashboard, \"0i7gn3bvDfvcqE2eVd43YC0z00M=\");\n_c = PopularMoviesDashboard;\nexport default PopularMoviesDashboard;\nvar _c;\n$RefreshReg$(_c, \"PopularMoviesDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Chart","BackToDashboardButton","jsxDEV","_jsxDEV","PopularMoviesDashboard","_s","movieData","setMovieData","fetch","then","res","json","data","catch","err","console","error","chartData","labels","map","movie","winner","datasets","label","count","backgroundColor","borderColor","borderWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/Users/nicoc/DisneyRanker/src/admin/PopularMoviesDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Chart } from 'react-chartjs-2';\r\nimport './admin.css'; // Import the CSS file\r\nimport BackToDashboardButton from './BackToDashboardButton'; // Correct path as per your project structure\r\nconst PopularMoviesDashboard = () => {\r\n    const [movieData, setMovieData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('http://186.113.234.239:3001/api/popular-movies')\r\n            .then(res => res.json())\r\n            .then(data => setMovieData(data))\r\n            .catch(err => console.error(err));\r\n    }, []);\r\n\r\n    // Prepare data for Chart.js\r\n    const chartData = {\r\n        labels: movieData.map(movie => movie.winner),\r\n        datasets: [{\r\n            label: 'Number of Wins',\r\n            data: movieData.map(movie => movie.count),\r\n            backgroundColor: 'rgba(54, 162, 235, 0.2)',\r\n            borderColor: 'rgba(54, 162, 235, 1)',\r\n            borderWidth: 1\r\n        }]\r\n    };\r\n\r\n    return (\r\n        <div className=\"popular-movies-dashboard\">\r\n            <h2>Popular Movies Dashboard</h2>\r\n            <Chart type=\"bar\" data={chartData} />\r\n            <BackToDashboardButton />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PopularMoviesDashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,iBAAiB;AACvC,OAAO,aAAa,CAAC,CAAC;AACtB,OAAOC,qBAAqB,MAAM,yBAAyB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC7D,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZS,KAAK,CAAC,gDAAgD,CAAC,CAClDC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIL,YAAY,CAACK,IAAI,CAAC,CAAC,CAChCC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,SAAS,GAAG;IACdC,MAAM,EAAEZ,SAAS,CAACa,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,MAAM,CAAC;IAC5CC,QAAQ,EAAE,CAAC;MACPC,KAAK,EAAE,gBAAgB;MACvBX,IAAI,EAAEN,SAAS,CAACa,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACI,KAAK,CAAC;MACzCC,eAAe,EAAE,yBAAyB;MAC1CC,WAAW,EAAE,uBAAuB;MACpCC,WAAW,EAAE;IACjB,CAAC;EACL,CAAC;EAED,oBACIxB,OAAA;IAAKyB,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACrC1B,OAAA;MAAA0B,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjC9B,OAAA,CAACH,KAAK;MAACkC,IAAI,EAAC,KAAK;MAACtB,IAAI,EAAEK;IAAU;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrC9B,OAAA,CAACF,qBAAqB;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEd,CAAC;AAAC5B,EAAA,CA7BID,sBAAsB;AAAA+B,EAAA,GAAtB/B,sBAAsB;AA+B5B,eAAeA,sBAAsB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}